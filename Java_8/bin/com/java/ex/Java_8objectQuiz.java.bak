package com.java.ex;

/* 
* 객체는 뭘까? = 사람이 말로 표현할 수 있는 모든 것 (ex 싸움, 퍽, 음식...)
* 
* 객체는 속성(특징,정보)과 행위(상태)로 나눌 수 있다, 드럽게 많게 나누고 정의 가능
* 추상화 과정은 무엇인가? = 내가 만드는 프로그램에서 필요한 것만 뽑아내는 것. 
* 을 마치고 나면 속성은 멤버 변수 행위는 멤버 메서드(함수) 가 된다
* 그래서 다 잘 만들어내면 그게 클래스(사용자 지정 데이터 타입)
* 변수.뭐뭐 는 변수 밑에 딸려있는 뭐뭐를 가르키는 것 ex) sc.name(); 등
* 
* 
* 사람이 가진 명사는 뭔가? = 눈 코 입 머리카락 키 몸무게 등 (특징들)
* 사람이 할 수 있는 행위는? = 움직이다, 걷다, 서다, 쥐어패다, 째려보다 등 
* 
* */

public class Java_8objectQuiz {

	public static void main(String[] args) {

	}
}

/*
 * 객체의 특징 캡슐화 (정보 은닉(보안에도 좋다)) - 객체 안에 내부 속속들이는 알 필요가 없다
 * 
 * ex)Scanner를 떠올려라 그 안에 무슨 멤버 변수 있는지 몰라도 사용한다
 * 
 * 다형성 - 하나의 객체 내에서 여러개의 형태의 메서드가 존재할 수 있다
 * 
 * ex) 표현은 같지만 다른 행동을 하는 예로 '열다'가 있다. '창문을 열다', '지갑을 열다', '파일을 열다', '은행 계좌를 열다'와
 * 같이 다양한 의미로 사용된다. 
 * 탈 것 이라는 객체 안에는 
 * 1. 버스를 타다 
 * 2. 비행기를 탄다 
 * 3. 오토바이를 탔다 
 * 오버라이딩(하나의클래스에서의 표현) - 부모에서 정의한 메서드를 자식에서 제 정의해서 사용할 수 있다
 * 
 * 
 * 상속 - 부모 객체가 정의한 것을 자식도 쓸 수 있다
 * 
 * 오버로딩(상속에서의 표현) - 하나의 클래스에 여러 개의 생성자가 존재(매개변수의 개수 또는 자료형(데이터 타입)을 다르게 하여 사용 가능) 
 * ex)사람은 객체 멤버
 * 메서드는'먹다'가 있다 근데 이 먹다에는 나이를 먹다 와 음식을 먹다 가 있다 
 * 음식을 먹으면 = 체력 증가, 피로도 증가 
 * 나이를 먹으면 = 어깨 결림, 체력 감소, 노안 습득
 * 
 * 생성자 생성자의 특징 
 * 1. 생성자의 이름은 클래스 이름과 동일하다 
 * 2. 생성된 개체는 동일한 클래스에서 생성되었다 하더라도 완전히 별개임
 * 3. 반환(리턴)값이 없다 (void도 아님)
 * 4. 접근 제한자 : 멤버 변수의 접근 제한자와 같은 의미 (private 한정자는 내부적으로만 사용되는 생성자)
 * 5. 클래스에 생성자가 지정되지 않을 때 : 기본 생성자(매게변수가 없는 생성자)가 자동 생성
 * 
 * final : 변할 수 없는 상수 값을 세팅한다
 * 형식 - final 데이터 타입 변수명 = 초기값; 을 해두면 프로그램 끝날때까지 절대로 변할 수 없다.
 */

/* 
 * 21.09.13 
 * 패턴 디자인
 * 패턴의 종류 = 싱글톤, 스트레티지(전략)
 * 패턴이란? - 객체지향 언어의 장점들을 모아 가장 효율적으로 개발을 할 수 있게 만들어 놓은 틀
 * 싱글톤 패턴이란? - 어떤 클래스의 인스턴스는 오직 하나임을 보장하고,
 * 				 이 인스턴스에 접근할 수 있는 전역적인(글로벌) 접촉점을 제공하는 패턴
 * 스태틱때 사용하는 게 싱글톤 패턴임 EX) A가 B에게 입금하면 둘의 통장에 출금 입금 표시가 뜨는 것
*/